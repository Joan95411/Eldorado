image: maven:latest

stages: # List of stages for jobs and their order of execution
  - build
  - test
  - package
#  - deploy
  - report
#
#.standard-rules:
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'  # Run for all changes to a merge request's source branch
#    - or:
#        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run for pushes to default branch
#        - if: $CI_COMMIT_TAG  # Run for tagged commits

build-job:
  stage: build
  tags:
    - SET2024
  script:
    - echo "Maven building started."
    - mvn -B -DskipTests clean package
    #- mvn compile
  cache:
    paths:
      - ~/.m2/repository

test-implemented-tests:
  stage: test
  tags:
    - SET2024
  dependencies:
    - build-job
  script:
    - echo "Running all tests."
    - mvn test -Dtest=*!New*

test-new-tests:
  stage: test
  tags:
    - SET2024
  dependencies:
    - build-job
  script:
    - echo "Testing"
    - mvn test -Dtest=*New
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

verify-job:
  stage: test
  tags:
    - SET2024
  dependencies:
   - build-job
  script:
    - echo "Running additional verification tests."
    - mvn verify
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

package-prod:
  stage: package
  tags:
    - SET2024
  script:
    - echo "Maven package started"
    - mvn package
  environment: production
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

#deploy-prod:
#  stage: deploy
#  tags:
#    - SET2024
#  dependencies:
#    - package-prod
#  script:
#    - echo "Maven deploy started"
#    - mvn deploy
##    - mvn deploy -s $DEPLOY_SERVER -u $DEPLOY_USER -p $DEPLOY_PASSWORD
#  environment: production
#  artifacts:
#    paths:
#      - target/*.war
#  rules:
#    - if: $CI_COMMIT_BRANCH == "main"

sigridci:
  stage: report
  image:
    name: softwareimprovementgroup/sigridci:latest
  script:
    - sigridci.py --customer utst --system team04 --source .
  allow_failure: true
  artifacts:
    paths:
      - "sigrid-ci-output/*"
    reports:
      junit: "sigrid-ci-output/sigridci-junit-format-report.xml"
    expire_in: 1 week
    when: always
  rules:
    - if: $CI_MERGE_REQUEST_ID

sigridpublish:
  stage: report
  image:
    name: softwareimprovementgroup/sigridci
  script:
    - sigridci.py --customer utst --system team04 --source . --publish
  allow_failure: true
  artifacts:
    paths:
      - "sigrid-ci-output/*"
    expire_in: 1 week
    when: always
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# variables:
#   DEPLOY_SERVER: "your-deploy-server.com"
#   DEPLOY_USER: "username"
#   DEPLOY_PASSWORD: "${CI_JOB_TOKEN}"
